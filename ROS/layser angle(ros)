#!/usr/bin/env python

import ros
import sys
import rospy
from std_msgs.msg import String
from sensor_msgs.msg import LaserScan
from geometry_msgs.msg import Twist 


class AutoDrive:
	def __init__(self):
		rospy.init_node('someone',anonymous=True)
		rospy.Subscriber("/scan", LaserScan, self.callback)
		self.pub = rospy.Publisher('/turtle1/cmd_vel', Twist, queue_size=1)
	
	@staticmethod
	def RAD2DEG(x):
		return ((x)*180/3.14159265358979323846)
	
	def callback(self, scan):
		result = Twist()
		result.linear.x = 1
		for i, distance in enumerate(scan.ranges):
			angle = AutoDrive.RAD2DEG(scan.angle_min + scan.angle_increment * i)
			if angle <= -4 or angle >= 4:
				continue 		

			if distance <= 0.5:
				result.linear.x = 0
				result.angular.z = -1
				break
		
		rospy.loginfo(result)
		self.pub.publish(result)



if __name__=='__main__':
	ad = AutoDrive()
	rospy.spin()
